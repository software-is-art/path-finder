{
  "packages": [
    "git",
    "gnumake",
    "nodejs@20"
  ],
  "shell": {
    "init_hook": [
      "echo 'ðŸš€ PathFinder LISP Development Environment'",
      "echo '   Racket version: '$(racket --version | head -1)",
      "echo '   Node.js version: '$(node --version)",
      "echo '   Project: PathFinder LISP - HoTT-based functional language'",
      "echo '   Commands:'",
      "echo '     devbox run build       # Check syntax and compile'",
      "echo '     devbox run test        # Run comprehensive test suite'",
      "echo '     devbox run fmt         # Format all Racket code'",
      "echo '     devbox run lint        # Run static analysis'",
      "echo '     devbox run repl        # Start interactive REPL'",
      "echo '     task-master next       # Get next development task'",
      "echo ''"
    ],
    "scripts": {
      "setup":        "raco pkg install --auto rackunit typed-racket",
      "build":        "raco setup . && raco check-deps src/",
      "run":          "racket src/main.rkt",
      "repl":         "racket src/main.rkt --interactive", 
      "version":      "racket src/main.rkt --version",
      "test":         "raco test src/ tests/",
      "test-coverage": "raco cover src/ tests/",
      "fmt":          "find src tests -name '*.rkt' -exec raco fmt -i {} \\;",
      "check-fmt":    "find src tests -name '*.rkt' -exec raco fmt --check {} \\;",
      "lint":         "raco check-deps src/ && find src tests -name '*.rkt' -exec raco expand {} \\; > /dev/null",
      "docs":         "raco scribble docs/manual.scrbl",
      "clean":        "find . -name 'compiled' -type d -exec rm -rf {} + 2>/dev/null || true",
      "ci":           "devbox run build && devbox run check-fmt && devbox run lint && devbox run test",
      "install-deps": "devbox run setup",
      "tasks":        "npm run tasks",
      "next-task":    "npm run next", 
      "task-status":  "npm run task"
    }
  },
  "env": {
    "PATHFINDER_VERSION":     "0.1.0",
    "RACKET_COLLECTION_PATH": "./src",
    "PLTCOLLECTS":           "./src:$PLTCOLLECTS"
  }
}
